'use strict';(function(window, $, Routing, swal) {    class ChalSpLogApp {        constructor($wrapper, $name) {            this.$wrapper = $wrapper;            this.dataName = $name;            this.$wrapper.on(                'submit',                ChalSpLogApp._selectors.newPChalSpForm,                this.handleNewFormSubmit.bind(this)            );        }        /**         *         * @returns {{newPChalSpForm: string}}         * @private         */        static get _selectors() {            return {                newPChalSpForm: '.js-new-chalsp-log-form'            }        }        /**         *         * @param e         */        handleNewFormSubmit(e) {            e.preventDefault();            const $form = $(e.currentTarget);            const formData = {};            for (let fieldData of $form.serializeArray()) {                formData[fieldData.name] = fieldData.value            }            formData['image'] = document.getElementById("imageId").src;            this._saveChalSpLog(formData)                .then((data) => {                    this._clearForm();                    window.location.href = window.location.href + '_logged';                }).catch((errorData) => {                    this._mapErrorsToForm(errorData.errors);                });        }        /**         *         * @param data         * @returns {Promise}         * @private         */        _saveChalSpLog(data) {            return new Promise((resolve, reject) => {                const url = Routing.generate(this.dataName + '_new');                console.log(url);                $.ajax({                    url,                    method: 'POST',                    data: JSON.stringify(data)                }).then((data, textStatus, jqXHR) => {                    $.ajax({                        url: jqXHR.getResponseHeader('Location')                    }).then((data) => {                        const html = successTemplate();                        const $row = $($.parseHTML(html));                        let $wrapper = $('.js-new-chalsp-form');                        $wrapper.hide().append($row).fadeIn();                        $('.js-chalsp-log-table').remove();                        setTimeout(() =>{                            $wrapper.find('.log-success').fadeOut(() => {                                $wrapper.find('.log-success').remove();                            });                            location.reload();                        },1000);                        resolve(data);                    });                }).catch((jqXHR) => {                    const errorData = JSON.parse(jqXHR.responseText);                    reject(errorData);                });            });        }        /**         *         * @param errorData         * @private         */        _mapErrorsToForm(errorData) {            this._removeFormErrors();            const $form = this.$wrapper.find(ChalSpLogApp._selectors.newPChalSpForm);            for (let element of $form.find(':input')) {                const fieldName = $(element).attr('name');                const $wrapper = $(element).closest('.form-group');                if (errorData[fieldName]) {                    const $error = $('<span class="js-field-error help-block"></span>');                    $error.html(errorData[fieldName]);                    $wrapper.append($error);                    $wrapper.addClass('has-error');                }            }        }        /**         *         * @private         */        _removeFormErrors() {            const $form = this.$wrapper.find(ChalSpLogApp._selectors.newPChalSpForm);            $form.find('.js-field-error').remove();            $form.find('.form-group').removeClass('has-error');        }        /**         *         * @private         */        _clearForm() {            this._removeFormErrors();            const $form = this.$wrapper.find(ChalSpLogApp._selectors.newPChalSpForm);            $form[0].reset();        }    }    const successTemplate = () => `        <div class="log-success">            <h3 class="alert alert-success">                <p><span class="fa fa-thumbs-up"></span><strong> Success!</strong>            </h3>        </div>    `;    window.ChalSpLogApp = ChalSpLogApp;})(window, jQuery, Routing, swal);